<section class="hero is-info">
  <div class="hero-body">
    <div class="container">
      <h1 class="title">
        投稿一覧画面
      </h1>
    </div>
  </div>
</section>
<section class="container">
	<div class="columns">
    <div class="column is-large">
  		<h3>カテゴリ絞り込み</h3>
  		<% @categories.each do |categories| %>
  			<%= link_to categories.name, posts_path(category_id: categories.id) %>
  		<% end %>
  	    <h3>タグ絞り込み</h3>
  		<% @tag_list.each do |tag| %>
  			<%= link_to tag.name, posts_path(tag_id: tag.id) %>
  		<% end %>
  	</div>
	</div>
</section>
<section class="container">
  <div class="columns">
    <div class="column">
     	<% if params[:category_id] %>
        <h2 class="title"><%= @category.name %>の投稿一覧 (全<%= @all_posts_count %>件)</h2>
      <% elsif params[:tag_id] %>
        <h2 class="title"><%= @tag.name %>の投稿一覧 (全<%= @all_posts_count %>件)</h2>
      <% else %>
        <h2 class="title">投稿一覧 (全<%= @all_posts_count %>件)</h2>
      <% end %>
		</div>
	</div>
</section>
<section class="container">
      <div class="columns is-multiline ">
         <% @posts.each do |post| %>
        <div class="column is-3 is-flex">
          <div class="card ">
            <header class="card-header">
              <p class="card-header-title">
                <%= link_to post.title, post_path(post)%>
              </p>
            </header>
            <div class="card-image image is-4by3">
              <%= link_to post_path(post) do %>
      　　　　　　　　　<% post.images.first(1).each do |image| %>
                  <%= attachment_image_tag image, :image, format: 'jpg', size: "250x250" %>
                <% end %>
              <% end %>
            </div>
            <div class="card-content">
               <div class="content average-score">
                   <div class="star-rating mb-2">
                    <div class="star-rating-front" style="width: <%= post.review_percentage %>%">★★★★★</div>
                    <div class="star-rating-back">★★★★★</div>
                   </div>
                </div>
              　<table class="table is-narrow">
                  <tr>
                    <th>レビュー</th>
                  </tr>
                  <tr>
                    <td><%= post.body %></td>
                  </tr>
                  <tr>
                    <th>カテゴリ:<%= post.category.name %></th>
                  </tr>
                </table>
                <div class="card-content">コメント件数：<%= post.post_comments.count %></div>
              </div>
          </div>
        </div>
        <% end %>
      </div>
    </div>
  </section>
<section class="container">
  <div class="columns is-mobile is-centered has-text-centered">
    <div class="column is-3 is-centerd">
       <nav class="pagination is-rounded" role="navigation" aria-label="pagination"><%= paginate @posts %></nav>
    </div>
  </div>
  <div class="columns is-mobile is-centered ">
   <div class="column">
      <div id="map">
            <script>

                let map;
                let marker = []; // マーカーを複数表示させたいので、配列化
                let infoWindow = []; // 吹き出しを複数表示させたいので、配列化
                const posts = gon.posts; // コントローラーで定義したインスタンス変数を変数に代入
                function initMap(){
                // 現在位置の特定
                 navigator.geolocation.getCurrentPosition(function (position){
                // LatLngに位置座標を代入
                        LatLng = new google.maps.LatLng(position.coords.latitude, position.coords.longitude);
                      // mapの初期位置設定
                        map = new google.maps.Map(document.getElementById('map'), {
                      center: LatLng,
                      zoom: 7
                       });
                  　　　  map.setCenter(LatLng);
                             window.onload = function(){
                            makeMap(35.446806, 139.636163);
                        };
                        for (let i = 0; i <  @all_posts_count i++){
                          // studios[i]は変数iのユーザーを取得している
                          marker[i] = new google.maps.Marker({
                            map: map,
                            position: {
                              // DBに保存してある、緯度・経度を呼び出す
                              lat: posts[i].latitude,
                              lng: posts[i].longitude
                            }
                          });
                          // 変数iを変数idに代入
                          let id = posts[i]['id']
                          // infoWindowは吹き出し
                          infoWindow[i] = new google.maps.InfoWindow({
                            // contentで中身を指定
                            // 今回は文字にリンクを貼り付けた形で表示
                            content: `<a href='/posts/${id}'>${posts[i].name}</a>`
                          });
                          // markerがクリックされた時、
                          marker[i].addListener("click", function(){
                            // infoWindowを表示
                            infoWindow[i].open(map, marker[i]);
                          });
                        }
                      });
                    }
            </script>
            <script async defer
                  src="https://maps.googleapis.com/maps/api/js?key=<%= ENV['GOOGLEMAP'] %>&callback=initMap">
            </script>
        </div>
    </div>
  </div>
</section>