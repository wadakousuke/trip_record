<section class="hero is-info">
  <div class="hero-body">
    <div class="container">
      <h1 class="title">
        新規投稿画面
      </h1>
    </div>
  </div>
</section>

<section class="section">
  <div class="container">
    <div class="columns is-centered">
      <div class="column is-5">
         <%= form_with model: @post do |f| %>
          <div class="form-group">
          <div class="field">
           <%= f.label :"タイトル" %>
            <p class="control has-icons-left">
             <%=f.text_field :title, autofocus: true, class: "input"%>
              <span class="icon is-small is-left">
                <i class="fas fa-pen"></i>
              </span>
            </p>
          </div>
          <div class="field">
           <%= f.label :"レビュー" %>
            <p class="control has-icons-left">
             <%= f.text_area :body, autofocus: true, class: "input textarea is-large" %>
              <span class="icon is-small is-left">
                <i class="fas fa-pen"></i>
              </span>
            </p>
          </div>
          <div class="form-group">
          <label for="book_title">おすすめ度</label>
          <div class="main-rating">
                <div class="ratings mb-3">
                  <span class="fa fa-star-o" id="star"></span>
                  <span class="fa fa-star-o" id="star"></span>
                  <span class="fa fa-star-o" id="star"></span>
                  <span class="fa fa-star-o" id="star"></span>
                  <span class="fa fa-star-o" id="star"></span>
                  <span class="ml-3 rating-value-display"><span id="rating-value-display">0</span>/5</span>
                </div>
                 <%= f.hidden_field :review, id: "rating-value" %>
              </div>
          </div>

          <div class="form-group">
          <div> <%= f.attachment_field :images_images, multiple: true %></div>
          </div>
          <div class="field">
           <%= f.label :"住所" %>
            <p class="control has-icons-left">
              <%=f.text_field :address, autofocus: true, class: "input"%>
              <span class="icon is-small is-left">

              </span>
            </p>
          </div>
          <div class="field">
           <%= f.label :"体験日" %>
            <p class="control">
              <%= f.date_field :experience_at, autofocus: true, class: "input"%>
            </p>
          </div>
          <div class="field">
           <%= f.label :"カテゴリ" %>
            <p class="control">
              <%= f.collection_select :category_id, Category.all, :id, :name, autofocus: true, class: "input"%>
            </p>
          </div>
          <div class="field">
           <%= f.label :"タグ" %>
            <p class="control">
              <%= f.text_field :name,autofocus: true, class: "input"%>
            </p>
          </div>
           <%= f.hidden_field :user_id, :value => current_user.id %>
          <div class="field">
            <p class="control">
              <%= f.select :status, Post.statuses.keys.map { |k| [t("enums.post.status.#{k}"),k]}, {}, {class: "custom-select w-25"}%>
            </p>
          </div>
          <div class="form-group">
          <%= f.submit "投稿する", class: "button is-success" %>
          </div>
          <% end %>
      </div>
    </div>
  </div>
</section>
<script>
  // class = "ratings"の子要素を取得
const stars = document.querySelector(".ratings").children;
// const stars = document.getElementsByClassName("ratings").children;
// id = "rating-value"の要素を取得
const ratingValue = document.getElementById("rating-value");
// id = "rating-value-display"の要素を取得
const ratingValueDisplay = document.getElementById("rating-value-display");
// indexという変数を定義
let index;

// reveiwの投稿ページに遷移するとstars.lengthの値（5）だけ繰り返し
for(let i=0; i<stars.length; i++){
	console.log(stars.length)
	// 星にカーソルが乗ったときに実行する関数を定義
	stars[i].addEventListener("mouseover",function(){
		// stars.lengthの値（5）だけ繰り返し
		// つまり、星カーソルが乗った時、5回繰り返される
		for(let j=0; j<stars.length; j++){
			console.log(stars.length)
			// まず全て星をくり抜く
			stars[j].classList.remove("fa-star");
			stars[j].classList.add("fa-star-o");
		}
		// そのあと星の数だけ以下の関数が繰り返される。
		for(let j=0; j<=i; j++){
			console.log(stars.length)
			stars[j].classList.remove("fa-star-o");
			// カーソルが乗った星まで星を塗りつぶす
			stars[j].classList.add("fa-star");
		}
	})
	// クリックされた星の番号+1をratingValueに代入
	stars[i].addEventListener("click",function(){
		ratingValue.value = i+1;
		ratingValueDisplay.textContent = ratingValue.value;
		// indexにクリックされた星の番号を代入
		index = i;
	})
	// 星からカーソルが離れたときに実行される関数
	stars[i].addEventListener("mouseout",function(){
		// まず5回繰り返す
		for(let j=0; j<stars.length; j++){
			// まず全ての星をくり抜く
			stars[j].classList.remove("fa-star");
			stars[j].classList.add("fa-star-o");
		}
		for(let j=0; j<=index; j++){
			// クリックされている星まで塗りつぶす
			stars[j].classList.remove("fa-star-o");
			stars[j].classList.add("fa-star");
		}
	})
}


</script>
